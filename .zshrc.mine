export TMPDIR=/tmp
export MANPATH=/usr/local/share/man:$MANPATH
export EDITOR=/usr/bin/vim
export PATH=/usr/local/bin:/usr/local/sbin:$HOME/bin:$HOME/scripts:$PATH

# use coreutils if it exists
if brew --prefix coreutils > /dev/null; then
  export PATH="$(brew --prefix coreutils)/libexec/gnubin:$PATH"
  eval `dircolors ~/dircolors.256dark`
  alias ls="ls -h --color"
else
  echo 'coreutils is not installed'
  echo 'run: brew install coreutils'
  export LSCOLORS=cxfxgxdxbxegedabagacad
  alias ls="ls -hG"
fi

export RUBY_HEAP_MIN_SLOTS=1000000
export RUBY_HEAP_SLOTS_INCREMENT=1000000
export RUBY_HEAP_SLOTS_GROWTH_FACTOR=1
export RUBY_GC_MALLOC_LIMIT=200000000
export RUBY_HEAP_FREE_MIN=2000000

alias la="ls -a"
alias lf="ls -F"
alias ll="ls -l"
alias lla="ls -la"
alias du="du -h"
alias df="df -h"
alias su="su -l"
alias grep="grep --color"
alias g="git"
alias gst="g status"
alias gbr="g branch"
alias gbra="gbr -a"
alias gco="g checkout"
alias gci="g commit"
alias gcia="g commit -a"
alias gadd="g add ."
alias getch="g fetch"
alias giff="g diff"
alias giffc="giff --cached"
alias gsmu="g submodule update -i"
alias gg="g grep --color"
alias gpl="g log --graph --all --format=format:'%x09%C(bold blue)%h%C(reset) %C(green)%ar%C(reset)%x09 %C(bold white)%an%C(reset) - %C(white)%s%C(reset) %C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative"
alias wget="nocorrect wget"
alias ipaddr="ifconfig en1 | grep inet\ | awk '{print \$2}' | pbcopy && pbpaste"
alias lv="nocorrect lv"
alias b="bundle exec"
alias git-root="git rev-parse --show-toplevel"
alias logrep="tail -f log/development.log|grep"
alias frep="find . -name "
alias cdgr="cd \`git-root\`"
alias tmux="tmux -2"
alias bspec="bundle exec rspec"
alias uncolor='sed -r "s/\x1B\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g"'
alias hist="ruby -ne \"l=\\\$_;n=l.sub(/^\\s+(\\d+).*/, '\\1').chomp;puts n.rjust(4) + ' ' + '*'*n.to_i\""
alias aggrefail="ruby -e \"h||=Hash.new('');ARGF.readlines.each{|l|l=l.slice(/(\.\/spec.*?)\s#/, 1);file,line=l.split(':');h[file]+=':'+line.chomp}; h.each{|file,lines|puts file+lines}\""
alias comma_join="ruby -e \"puts ARGF.to_a.map(&:strip).join(',')\""

bindkey '^R' history-incremental-pattern-search-backward
bindkey '^S' history-incremental-pattern-search-forward
bindkey '^x' zaw-cdr
bindkey '^g' zaw-git-files
bindkey '^b' zaw-git-branch

function gf() { git submodule foreach git $*; git $* }
function cdb() {
  cd `bundle show $1`
}

function switchdb() {
  pushd -q config && ln -sf database.yml.$1 database.yml && popd -q
  if [ "$2" = "-v" ]; then
    ll config/database.yml
  fi
}

function alc() {
  if [ $# != 0 ]; then
    w3m "http://eow.alc.co.jp/$*/UTF-8/?ref=sa"
  else
    w3m "http://www.alc.co.jp/"
  fi
}

function pwgen() {
  cat /dev/random | env LC_CTYPE=C tr -cd \[:alnum:\] | fold -w $1 | head -n 1
}
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' stagedstr "+"
zstyle ':vcs_info:git:*' unstagedstr "-"
zstyle ':vcs_info:*' formats '(%r)[%b]'
zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'

autoload -Uz is-at-least
if is-at-least 4.3.10; then
  zstyle ':vcs_info:git:*' check-for-changes true
  zstyle ':vcs_info:git:*' stagedstr "+"
  zstyle ':vcs_info:git:*' unstagedstr "-"
  zstyle ':vcs_info:*' formats '(%r)[%b] %c%u'
  zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a] %c%u'
fi
precmd () {
  psvar=()
  LANG=en_US.UTF-8 vcs_info
  [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}
RPROMPT="%1(v|%F{green}%1v%f|)"

local COMMAND=""
local COMMAND_TIME=""
function precmd() {
  if [ "$COMMAND_TIME" -ne "0" ] ; then
    local d=`date +%s`
    d=`expr $d - $COMMAND_TIME`
    if [ "$d" -ge "10" ] ; then
      COMMAND="$COMMAND "
      growlnotify -t "${${(s: :)COMMAND}[1]}" -m "$COMMAND"
    fi
  fi
  COMMAND="0"
  COMMAND_TIME="0"
}
function preexec () {
  COMMAND="${1}"
  if [ "`perl -e 'print($ARGV[0]=~/ssh|^vi|^tig/)' $COMMAND`" -ne 1 ] ; then
    COMMAND_TIME=`date +%s`
  fi
}

function pcolor() {
  for ((f = 0; f < 255; f++)); do
    printf "\e[38;5;%dm %3d*â– \e[m" $f $f
    if [[ $f%8 -eq 7 ]] then
      printf "\n"
    fi
  done
  echo
}
[ -f ~/.zshrc.local ] && source ~/.zshrc.local

if [ -f $HOME/work/zaw/zaw.zsh ]; then
  source $HOME/work/zaw/zaw.zsh
else
  echo 'zaw is not found'
  echo 'run: cd $HOME/work;git clone git://github.com/zsh-users/zaw.git'
fi
