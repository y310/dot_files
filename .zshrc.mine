eval "$(/opt/homebrew/bin/brew shellenv)"
export TMPDIR=/tmp
export FZF_DEFAULT_OPTS="--layout=reverse --cycle"
export HOMEBREW_NO_AUTO_UPDATE=1

# Add this to fix tmux but it might cause problem somewhere
export LC_ALL=ja_JP.UTF-8

# use coreutils if it exists
if [ -e /opt/homebrew/opt/coreutils ]; then
  coreutils_path=/opt/homebrew/opt/coreutils
else
  coreutils_path=`brew --prefix coreutils`
fi

if [ "$coreutils_path" ]; then
  export PATH="$coreutils_path/libexec/gnubin:$PATH"
  eval `dircolors ~/dircolors.256dark`
  alias ls="ls -h --color"
else
  echo 'coreutils is not installed'
  echo 'run: brew install coreutils'
  export LSCOLORS=cxfxgxdxbxegedabagacad
  alias ls="ls -hG"
fi

alias la="ls -a"
alias lf="ls -F"
alias ll="ls -l"
alias lla="ls -la"
alias du="du -h"
alias df="df -h"
alias su="su -l"
alias grep="grep --color"
alias g="git"
alias gst="g status"
alias gbr="g branch"
alias gbra="gbr -a"
alias gco="g checkout"
alias gci="g commit"
alias gcia="g commit -a"
alias gadd="g add ."
alias getch="g fetch"
alias giff="g diff"
alias giffc="giff --cached"
alias gsmu="g submodule update -i"
alias gg="g grep --color"
alias gpl="g log --graph --all --format=format:'%x09%C(bold blue)%h%C(reset) %C(green)%ar%C(reset)%x09 %C(bold white)%an%C(reset) - %C(white)%s%C(reset) %C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative"
alias wget="nocorrect wget"
alias ipaddr="ifconfig en1 | grep inet\ | awk '{print \$2}' | pbcopy && pbpaste"
alias lv="nocorrect lv"
alias b="bundle exec"
alias git-root="git rev-parse --show-toplevel"
alias logrep="tail -f log/development.log|grep"
alias frep="find . -name "
alias cdgr="cd \`git-root\`"
alias tmux="tmux -2"
alias bspec="bundle exec rspec"
alias uncolor='sed -r "s/\x1B\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g"'
alias hist="ruby -ne \"l=\\\$_;n=l.sub(/^\\s+(\\d+).*/, '\\1').chomp;puts n.rjust(4) + ' ' + '*'*n.to_i\""
alias aggrefail="ruby -e \"h||=Hash.new('');ARGF.readlines.each{|l|l=l.slice(/(\.\/spec.*?)\s#/, 1);file,line=l.split(':');h[file]+=':'+line.chomp}; h.each{|file,lines|puts file+lines}\""
alias comma_join="ruby -e \"puts ARGF.to_a.map(&:strip).join(',')\""
alias comma_join_s="ruby -e \"puts ARGF.to_a.map(&:strip).map {|s| %!'#{s}'!}.join(',')\""
alias vi="vim"

function peco-git-checkout() {
  git checkout -q $(git branch | sed 's/*//g' | sed 's/ //g' | peco)
  zle accept-line
}

zle -N peco-git-checkout

bindkey '^R' history-incremental-pattern-search-backward
bindkey '^S' history-incremental-pattern-search-forward
bindkey '^b' peco-git-checkout

function cdb() {
  cd `bundle show $1`
}

function pwgen() {
  cat /dev/random | env LC_CTYPE=C tr -cd \[:alnum:\] | fold -w $1 | head -n 1
}

local COMMAND=""
local COMMAND_TIME=""
precmd_notification() {
  if [ "$COMMAND_TIME" -ne "0" ] ; then
    local d=`date +%s`
    d=`expr $d - $COMMAND_TIME`
    if [ "$d" -ge "10" ] ; then
      COMMAND="$COMMAND "
      osascript -e "display notification \"$COMMAND\" with title \"${${(s: :)COMMAND}[1]}\""
    fi
  fi
  COMMAND="0"
  COMMAND_TIME="0"
}
add-zsh-hook precmd precmd_notification

function preexec () {
  COMMAND="${1}"
  if [ "`perl -e 'print($ARGV[0]=~/ssh|^vi|^tig/)' $COMMAND`" -ne 1 ] ; then
    COMMAND_TIME=`date +%s`
  fi
}

function pcolor() {
  for ((f = 0; f < 255; f++)); do
    printf "\e[38;5;%dm %3d*â– \e[m" $f $f
    if [[ $f%8 -eq 7 ]] then
      printf "\n"
    fi
  done
  echo
}
[ -f ~/.zshrc.local ] && source ~/.zshrc.local
